version: '3.8'

networks:
  cloudskin-network:

services:
  nginx:
    build:
      context: ./docker/nginx
      args:
        nginx_version: ${NGINX_VERSION}
    restart: unless-stopped
    container_name: ${PROJECT_NAME}-nginx
    depends_on:
      - php
    ports:
      - ${HTTP_PORT}:80
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./app:/var/www/html
    networks:
      - cloudskin-network

  mysql:
    build:
        context: ./docker/mysql
        args:
          mysql_version: ${MYSQL_VERSION}
    restart: unless-stopped
    container_name: ${PROJECT_NAME}-mysql
    volumes:
      - ./docker/mysql/sql-scripts:/docker-entrypoint-initdb.d
      - ./docker/mysql/data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    expose:
      - "3306"
    networks:
      - cloudskin-network
  
  php:
    build:
      context: ./docker/php
      args:
        php_version: ${PHP_VERSION}
        composer_version: ${COMPOSER_VERSION}
    restart: unless-stopped
    container_name: ${PROJECT_NAME}-php
    expose:
      - "9000"
    volumes:
      - ./app:/var/www/html
      - ./docker/php/limits.ini:/usr/local/etc/php/conf.d/limits.ini
      # - ./python:/var/www/html/public/python
    networks:
      - cloudskin-network

  npm:
    image: node:${NODE_VERSION}
    container_name: ${PROJECT_NAME}-npm
    volumes:
      - ./app:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      - cloudskin-network

  adminer:
    image: adminer:4.8.1
    restart: unless-stopped
    container_name: cloudskin-adminer
    ports:
      - "8000:8080"
    networks:
      - cloudskin-network